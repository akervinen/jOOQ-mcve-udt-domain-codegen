/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.java.postgres.udt;


import org.jooq.Schema;
import org.jooq.UDTField;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.SchemaImpl;
import org.jooq.impl.UDTImpl;
import org.jooq.mcve.java.postgres.Mcve;
import org.jooq.mcve.java.postgres.udt.records.FooRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Foo extends UDTImpl<FooRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mcve.foo</code>
     */
    public static final Foo FOO = new Foo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FooRecord> getRecordType() {
        return FooRecord.class;
    }

    /**
     * The attribute <code>mcve.foo.bar</code>.
     */
    public static final UDTField<FooRecord, String> BAR = createField(DSL.name("bar"), SQLDataType.CLOB, FOO, "");

    /**
     * No further instances allowed
     */
    private Foo() {
        super(DSL.name("foo"), null, null, false);
    }

    @Override
    public Schema getSchema() {
        return Mcve.MCVE != null ? Mcve.MCVE : new SchemaImpl(DSL.name("mcve"));
    }
}
